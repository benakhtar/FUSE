/*
* MIT License
*
* Copyright (c) 2022 Nora Khayata
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

//
// FlatBuffers Description of a Circuit:
//
// - Each circuit MUST be given a name
//
// - The computation nodes are stored in a list of NodeTable descriptions in topological order
//
// - The IDs of input and output nodes are stored in the inputs and outputs list respectively,
//   marking the nodes as inputs or outputs of the circuit.
//   These IDs must correspond to nodes that are present in the nodes table
//
// - Input and Output datatypes are stored in the respective list input_datatypes and output_datatypes where
//   input_datatypes must reflect the input types of the nodes marked as inputs and
//   output_datatypes must reflect the output types of the nodes marked as outputs
//
// - (Optional) when necessary, you can store additional information in the circuit_annotations string
//   if the string has the form "key1 : value1, key2 : value2" you can use getStringValueForAttribute(key)
//   to get "value" as a string

include "node.fbs";
include "datatype.fbs";
namespace fuse.core.ir;

table CircuitTable {
    name:string (required);

    inputs:[ulong];

    input_datatypes:[DataTypeTable];

    outputs:[ulong];

    output_datatypes:[DataTypeTable];

    nodes:[NodeTable];

    circuit_annotations : string;
}

root_type CircuitTable;
